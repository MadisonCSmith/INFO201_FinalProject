# Prints information about what the data set is about.
p("In this section, we look at what types of attacks occur
with varying frequency over time and in different locations.
By default, all countries are selected, but individual
countries can be deselected and selected to form a different
basis for the data shown."),
# Prints a disclaimer in italics.
em("Disclaimer: Countries with missing data have been excluded
from consideration."),
# Prints a description of the sidebar panel.
p("To see how the data can change, use the widgets below to
alter the years and location of terrorist attacks."),
# Outputs a sliderInput for the span of years.
sliderInput("year",
"Year Span:",
min = year.range[1],
max = year.range[47],
value = 1970),
step = 1,
sep = ""),
# Outputs a selectInput for the type of CO2 emission.
checkboxGroupInput("countries", "Choose countries:",
choiceNames = country.names.list,
selected = country.names.list,
choiceValues = country.names.list
)
), # SIDEBARPANEL
# Creates a mainPanel for the UI.
mainPanel(
# Outputs a tabPanel with the world map and data table.
tabsetPanel(type = "tabs",
# Outputs the world map with click based location
# information and descriptions of the map.
tabPanel("Map"
# , plotOutput("map", click = "plot_click"),
# verbatimTextOutput("location"),
# textOutput("map_description1"), br(),
# textOutput("map_description2")
),
# Outputs the data table with a description of what the
# table is about.
tabPanel("Table", br(), p("This table describes the carbon
emission values for all countries
for a given year, in either
kilotonnes or metric tonnes per
capita.")
# , tableOutput("table")
)
) # TABSETPANEL
) # MAINPANEL
) #TABPANEL
) # NAVBARPAGE
server <- function(input, output) {
# overview server code
output$overview <- renderText({
paste("overview of project, citations, etc.")
})
# zales server code
output$zale <- renderText({
paste("zale- all of things")
})
}
shinyApp(ui, server)
# Zale de Jong
# Sources the file "SourceCode.R".
source("SourceCode.R")
ui <- navbarPage(
"Global Terrorism",
# code for the overview tab
tabPanel("Overview",
titlePanel("Trends in Global Terrorism Over Time"),
textOutput("overview")
),
# Creates the tabPanel relating to terrorist attacks during certain
# times of year.
tabPanel("Types Of Attacks",
# Creates a title for the titlePanel.
titlePanel("What Types Of Attacks Are Most Frequent?"),
# Creates a sidebarLayout for the UI.
sidebarLayout(
# Creates a sidebarPanel for the UI.
sidebarPanel(
# Prints information about what the data set is about.
p("In this section, we look at what types of attacks occur
with varying frequency over time and in different locations.
By default, all countries are selected, but individual
countries can be deselected and selected to form a different
basis for the data shown."),
# Prints a disclaimer in italics.
em("Disclaimer: Countries with missing data have been excluded
from consideration."),
# Prints a description of the sidebar panel.
p("To see how the data can change, use the widgets below to
alter the years and location of terrorist attacks."),
# Outputs a sliderInput for the span of years.
sliderInput("year",
"Year Span:",
min = year.range[1],
max = year.range[47],
value = c(year.range[1], year.range[47])),
step = 1,
sep = ""),
# Outputs a selectInput for the type of CO2 emission.
checkboxGroupInput("countries", "Choose countries:",
choiceNames = country.names.list,
selected = country.names.list,
choiceValues = country.names.list
)
), # SIDEBARPANEL
# Creates a mainPanel for the UI.
mainPanel(
# Outputs a tabPanel with the world map and data table.
tabsetPanel(type = "tabs",
# Outputs the world map with click based location
# information and descriptions of the map.
tabPanel("Map"
# , plotOutput("map", click = "plot_click"),
# verbatimTextOutput("location"),
# textOutput("map_description1"), br(),
# textOutput("map_description2")
),
# Outputs the data table with a description of what the
# table is about.
tabPanel("Table", br(), p("This table describes the carbon
emission values for all countries
for a given year, in either
kilotonnes or metric tonnes per
capita.")
# , tableOutput("table")
)
) # TABSETPANEL
) # MAINPANEL
) #TABPANEL
) # NAVBARPAGE
server <- function(input, output) {
# overview server code
output$overview <- renderText({
paste("overview of project, citations, etc.")
})
# zales server code
output$zale <- renderText({
paste("zale- all of things")
})
}
shinyApp(ui, server)
# Zale de Jong
# Sources the file "SourceCode.R".
source("SourceCode.R")
ui <- navbarPage(
"Global Terrorism",
# code for the overview tab
tabPanel("Overview",
titlePanel("Trends in Global Terrorism Over Time"),
textOutput("overview")
),
# Creates the tabPanel relating to terrorist attacks during certain
# times of year.
tabPanel("Types Of Attacks",
# Creates a title for the titlePanel.
titlePanel("What Types Of Attacks Are Most Frequent?"),
# Creates a sidebarLayout for the UI.
sidebarLayout(
# Creates a sidebarPanel for the UI.
sidebarPanel(
# Prints information about what the data set is about.
p("In this section, we look at what types of attacks occur
with varying frequency over time and in different locations.
By default, all countries are selected, but individual
countries can be deselected and selected to form a different
basis for the data shown."),
# Prints a disclaimer in italics.
em("Disclaimer: Countries with missing data have been excluded
from consideration."),
# Prints a description of the sidebar panel.
p("To see how the data can change, use the widgets below to
alter the years and location of terrorist attacks."),
# Outputs a sliderInput for the span of years.
sliderInput("year",
"Year Span:",
min = year.range[1],
max = year.range[47],
value = year.range[1, 47],
step = 1,
sep = ""),
# Outputs a selectInput for the type of CO2 emission.
checkboxGroupInput("countries", "Choose countries:",
choiceNames = country.names.list,
selected = country.names.list,
choiceValues = country.names.list
)
), # SIDEBARPANEL
# Creates a mainPanel for the UI.
mainPanel(
# Outputs a tabPanel with the world map and data table.
tabsetPanel(type = "tabs",
# Outputs the world map with click based location
# information and descriptions of the map.
tabPanel("Map"
# , plotOutput("map", click = "plot_click"),
# verbatimTextOutput("location"),
# textOutput("map_description1"), br(),
# textOutput("map_description2")
),
# Outputs the data table with a description of what the
# table is about.
tabPanel("Table", br(), p("This table describes the carbon
emission values for all countries
for a given year, in either
kilotonnes or metric tonnes per
capita.")
# , tableOutput("table")
)
) # TABSETPANEL
) # MAINPANEL
) #TABPANEL
) # NAVBARPAGE
server <- function(input, output) {
# overview server code
output$overview <- renderText({
paste("overview of project, citations, etc.")
})
# zales server code
output$zale <- renderText({
paste("zale- all of things")
})
}
shinyApp(ui, server)
# Zale de Jong
# Sources the file "SourceCode.R".
source("SourceCode.R")
ui <- navbarPage(
"Global Terrorism",
# code for the overview tab
tabPanel("Overview",
titlePanel("Trends in Global Terrorism Over Time"),
textOutput("overview")
),
# Creates the tabPanel relating to terrorist attacks during certain
# times of year.
tabPanel("Types Of Attacks",
# Creates a title for the titlePanel.
titlePanel("What Types Of Attacks Are Most Frequent?"),
# Creates a sidebarLayout for the UI.
sidebarLayout(
# Creates a sidebarPanel for the UI.
sidebarPanel(
# Prints information about what the data set is about.
p("In this section, we look at what types of attacks occur
with varying frequency over time and in different locations.
By default, all countries are selected, but individual
countries can be deselected and selected to form a different
basis for the data shown."),
# Prints a disclaimer in italics.
em("Disclaimer: Countries with missing data have been excluded
from consideration."),
# Prints a description of the sidebar panel.
p("To see how the data can change, use the widgets below to
alter the years and location of terrorist attacks."),
# Outputs a sliderInput for the span of years.
sliderInput("year",
"Year Span:",
min = year.range[1],
max = year.range[47],
value = year.range[1, 47],
step = 1,
sep = ""),
# Outputs a selectInput for the type of CO2 emission.
checkboxGroupInput("countries", "Choose countries:",
choiceNames = country.names.list,
selected = country.names.list,
choiceValues = country.names.list
)
), # SIDEBARPANEL
# Creates a mainPanel for the UI.
mainPanel(
# Outputs a tabPanel with the world map and data table.
tabsetPanel(type = "tabs",
# Outputs the world map with click based location
# information and descriptions of the map.
tabPanel("Map"
# , plotOutput("map", click = "plot_click"),
# verbatimTextOutput("location"),
# textOutput("map_description1"), br(),
# textOutput("map_description2")
),
# Outputs the data table with a description of what the
# table is about.
tabPanel("Table", br(), p("This table describes the carbon
emission values for all countries
for a given year, in either
kilotonnes or metric tonnes per
capita.")
# , tableOutput("table")
)
) # TABSETPANEL
) # MAINPANEL
) # SIDEBARLAYOUT
) #TABPANEL
) # NAVBARPAGE
server <- function(input, output) {
# overview server code
output$overview <- renderText({
paste("overview of project, citations, etc.")
})
# zales server code
output$zale <- renderText({
paste("zale- all of things")
})
}
shinyApp(ui, server)
# Zale de Jong
# Sources the file "SourceCode.R".
source("SourceCode.R")
ui <- navbarPage(
"Global Terrorism",
# code for the overview tab
tabPanel("Overview",
titlePanel("Trends in Global Terrorism Over Time"),
textOutput("overview")
),
# Creates the tabPanel relating to terrorist attacks during certain
# times of year.
tabPanel("Types Of Attacks",
# Creates a title for the titlePanel.
titlePanel("What Types Of Attacks Are Most Frequent?"),
# Creates a sidebarLayout for the UI.
sidebarLayout(
# Creates a sidebarPanel for the UI.
sidebarPanel(
# Prints information about what the data set is about.
p("In this section, we look at what types of attacks occur
with varying frequency over time and in different locations.
By default, all countries are selected, but individual
countries can be deselected and selected to form a different
basis for the data shown."),
# Prints a disclaimer in italics.
em("Disclaimer: Countries with missing data have been excluded
from consideration."),
# Prints a description of the sidebar panel.
p("To see how the data can change, use the widgets below to
alter the years and location of terrorist attacks."),
# Outputs a sliderInput for the span of years.
sliderInput("year",
"Year Span:",
min = year.range[1],
max = year.range[47],
value = year.range[1, 47],
step = 1,
sep = ""
),
# Outputs a selectInput for the type of CO2 emission.
checkboxGroupInput("countries", "Choose countries:",
choiceNames = country.names.list,
selected = country.names.list,
choiceValues = country.names.list
)
) # SIDEBARPANEL
# # Creates a mainPanel for the UI.
# mainPanel(
#   # Outputs a tabPanel with the world map and data table.
#   tabsetPanel(type = "tabs",
#               # Outputs the world map with click based location
#               # information and descriptions of the map.
#               tabPanel("Map"
#                        # , plotOutput("map", click = "plot_click"),
#                        # verbatimTextOutput("location"),
#                        # textOutput("map_description1"), br(),
#                        # textOutput("map_description2")
#                        ),
#
#               # Outputs the data table with a description of what the
#               # table is about.
#               tabPanel("Table", br(), p("This table describes the carbon
#                                         emission values for all countries
#                                         for a given year, in either
#                                         kilotonnes or metric tonnes per
#                                         capita.")
#                        # , tableOutput("table")
#                        )
#    ) # TABSETPANEL
#  ) # MAINPANEL
) # SIDEBARLAYOUT
) #TABPANEL
) # NAVBARPAGE
server <- function(input, output) {
# overview server code
output$overview <- renderText({
paste("overview of project, citations, etc.")
})
# zales server code
output$zale <- renderText({
paste("zale- all of things")
})
}
shinyApp(ui, server)
# Zale de Jong
# Sources the file "SourceCode.R".
source("SourceCode.R")
ui <- navbarPage(
"Global Terrorism",
# code for the overview tab
tabPanel("Overview",
titlePanel("Trends In Global Terrorism Over Time"),
textOutput("Our overview will go here.")
),
# Creates the tabPanel relating to terrorist attacks during certain
# times of year.
tabPanel("Types Of Attacks",
# Creates a title for the titlePanel.
titlePanel("What Types Of Attacks Are Most Frequent?"),
# Creates a sidebarLayout for the UI.
sidebarLayout(
# Creates a sidebarPanel for the UI.
sidebarPanel(
# Prints information about what the data set is about.
p("In this section, we look at what types of attacks occur
with varying frequency over time and in different locations.
By default, all countries are selected, but individual
countries can be deselected and selected to form a different
basis for the data shown."),
# Prints a disclaimer in italics.
em("Disclaimer: Countries with missing data have been excluded
from consideration."),
# Prints a description of the sidebar panel.
p("To see how the data can change, use the widgets below to
alter the years and location of terrorist attacks."),
# Outputs a sliderInput for the span of years.
sliderInput("year",
"Year Span:",
min = year.range[1],
max = year.range[47],
value = year.range[1, 47],
step = 1,
sep = ""),
# Outputs a selectInput for the type of CO2 emission.
checkboxGroupInput("countries", "Choose countries:",
choiceNames = country.names.list,
selected = country.names.list,
choiceValues = country.names.list)
) # SIDEBARPANEL
) # SIDEBARLAYOUT
) #TABPANEL
) # NAVBARPAGE
server <- function(input, output) {
# overview server code
output$overview <- renderText({
paste("overview of project, citations, etc.")
})
# zales server code
output$zale <- renderText({
paste("zale- all of things")
})
}
shinyApp(ui, server)
runApp('TempShinyApp.R')
runApp('TempShinyApp.R')
# Hannah Lee
# Madison Smith
# Justin Chang
# Zale de Jong
# Section AF - Team 2
# Assignment 7
# Loads the shiny, dplyr, ggplot2, maps, and mapproj packages.
library("shiny")
library(dplyr)
library("ggplot2")
library(maps)
library(mapproj)
# Reads in the data set "globalterrorism.csv" and stores it in
# the variable survey.data.
my.data <- read.csv('./data/globalterrorism.csv',
stringsAsFactors=FALSE)
# Hannah Lee
# Madison Smith
# Justin Chang
# Zale de Jong
# Section AF - Team 2
# Assignment 7
# Loads the shiny, dplyr, ggplot2, maps, and mapproj packages.
library("shiny")
library(dplyr)
library("ggplot2")
library(maps)
library(mapproj)
# Reads in the data set "globalterrorism.csv" and stores it in
# the variable survey.data.
my.data <- read.csv('./data/globalterrorism.csv',
stringsAsFactors=FALSE)
# Hannah Lee
# Madison Smith
# Justin Chang
# Zale de Jong
# Section AF - Team 2
# Assignment 7
# Loads the shiny, dplyr, ggplot2, maps, and mapproj packages.
library("shiny")
library(dplyr)
library("ggplot2")
library(maps)
library(mapproj)
# Reads in the data set "globalterrorism.csv" and stores it in
# the variable survey.data.
my.data <- read.csv('./data/globalterrorism.csv',
stringsAsFactors=FALSE)
# Creates a new data frame containing only relevant information.
zale.data <- my.data %>%
na.omit()
# View(zale.data)
#
country.names.list <- as.list(sort(unique(zale.data$country_txt)))
# Stores the range of years the data frame spans.
year.range <- c(1970:2016)
